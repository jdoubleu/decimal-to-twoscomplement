{"version":3,"sources":["app.js"],"names":["w","d","V","invalidValue","numberPattern","wordLength","checkNumber","number","toString","match","repr","n","String","fromCharCode","reprReverse","s","charCodeAt","parseInt","convertDecimalToBase","base","rep","rem","Math","floor","replace","convertBaseToDecimal","ret","i","length","pos","charAt","pow","invertBinary","bin","b","split","map","v","car","join","twosComplement","res","sign","indexOf","substr","RangeError","el","data","value","blength","error","computed","result","gettwcs","watch","$el","querySelector","MaterialSnackbar","showSnackbar","timeout","message","setTimeout","methods","tc","oct","hex","_convertAndFill","ceil","log2","e","window","document","Vue"],"mappings":"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","sourcesContent":["/**\n * Adds a vue component and implements logic to convert decimal numbers to two's complement.\n *\n * @license MIT\n * @author Joshua Westerheide <dev@jdoubleu.de>\n */\n\n(function(w,d,V) {\n\n\t/**\n\t * Invalid value text\n\t * @type {string}\n\t */\n\tconst invalidValue = '?';\n\n\t/**\n\t * Regexp for a correct decimal number (as input)\n\t * @type {RegExp}\n\t */\n\tconst numberPattern = /^(\\+|-)?(0|[1-9]+[0-9]*)$/i;\n\n\t/**\n\t * Length of the displayed binary numbers (aka byte length)\n\t * @type {number}\n\t */\n\tlet wordLength = 8;\n\n\t/**\n\t * Checks whether the given number is valid\n\t * @param number\n\t * @returns {boolean}\n\t * @see numberPattern\n\t */\n\tconst checkNumber = number => {\n\t\treturn number.toString().match(numberPattern) != null;\n\t};\n\n\t/**\n\t * Converts all numbers larger than 9 to a letter/symbol\n\t * @param n\n\t * @returns {string}\n\t */\n\tconst repr = n => {\n\t\treturn n > 9 ? String.fromCharCode(65 /* 65 is A */ + n - 10) : n;\n\t};\n\n\t/**\n\t * Turns a given letter/symbol/number into a number\n\t * @param {string} s\n\t * @returns {number}\n\t * @see repr\n\t */\n\tconst reprReverse = s => {\n\t\ts = s.toString();\n\t\treturn s.charCodeAt(0) > 65 /* 65 is A */ ? s.charCodeAt(0)\t- 65 + 10 : parseInt(s);\n\t};\n\n\t/**\n\t * Converts a positive! decimal number into a number to the provided base.\n\t * @param {number} number\n\t * @param base\n\t * @returns {String}\n\t */\n\tconst convertDecimalToBase = (number, base = 10) => {\n\t\tlet rep = '',\n\t\t\trem = number;\n\n\t\t// Converts the given number using the base into its new representation\n\t\tdo {\n\t\t\trep = repr(rem % base) + rep;\n\t\t\trem = Math.floor(rem / base);\n\t\t} while(rem / base > 0);\n\n\t\t// Remove leading zeros\n\t\treturn rep.replace(/^0+(?!\\.|$)/, '');\n\t};\n\n\t/**\n\t * Converts a number of the given base to a decimal number\n\t * @param {string} number\n\t * @param base\n\t * @returns {number}\n\t */\n\tconst convertBaseToDecimal = (number, base = 2) => {\n\t\tlet ret = 0;\n\n\t\tfor(let i = number.length; i > 0; i--) {\n\t\t\tlet pos = number.length - i;\n\t\t\tret +=\treprReverse(number.charAt(i - 1)) * Math.pow(base, pos);\n\t\t}\n\n\t\treturn ret;\n\t};\n\n\t/**\n\t * Inverts a binary number according to two's complement\n\t * @param {string} bin\n\t */\n\tconst invertBinary = bin => {\n\t\t// Flip all bits\n\t\tlet b = bin.split('').map(v => {\n\t\t\treturn v == '1' ? '0' : '1';\n\t\t});\n\n\t\tlet i = b.length - 1,\n\t\t\tcar = 1;\n\t\t// Add +1\n\t\twhile(car == 1 && i >= 0) {\n\t\t\tif(b[i] == '1')\n\t\t\t\tb[i] = '0';\n\t\t\telse {\n\t\t\t\tb[i] = '1';\n\t\t\t\tcar = 0;\n\t\t\t}\n\t\t\ti--;\n\t\t}\n\n\t\treturn b.join('');\n\t};\n\n\t/**\n\t * Converts a number to two's complement in binary format\n\t * @param number\n\t * @returns {String}\n\t * @throws RangeError\n\t */\n\tconst twosComplement = (number) => {\n\t\tlet res = number.toString(),\n\t\t\tsign = '+';\n\n\t\tif(['+', '-'].indexOf(res.charAt(0)) !== -1) {\n\t\t\tsign = res.charAt(0);\n\t\t\tres = res.substr(1);\n\t\t}\n\n\t\tif((sign == '+' && res >= Math.pow(2, wordLength - 1)) || (res > Math.pow(2, wordLength - 1)))\n\t\t\tthrow new RangeError('Given number can\\'t be represented by current word bit length (' + wordLength + ').');\n\n\t\tres = convertDecimalToBase(parseInt(res), 2);\n\n\t\t// Fill up to word length\n\t\twhile(wordLength > res.length)\n\t\t\tres = '0' + res;\n\n\t\tif(sign === '-')\n\t\t\tres = invertBinary(res);\n\n\t\treturn res;\n\t};\n\n\t/**\n\t * Calculator vue app\n\t * Implements the calculation logic and UI\n\t * @type {Vue}\n\t */\n\tnew V({\n\t\tel: '#app',\n\t\tdata: {\n\t\t\tvalue: 0,\n\t\t\tblength: 8,\n\t\t\terror: ''\n\t\t},\n\t\tcomputed: {\n\t\t\tresult: function() {\n\t\t\t\twordLength = parseInt(this.blength);\n\t\t\t\treturn this.gettwcs(this.value);\n\t\t\t}\n\t\t},\n\t\twatch: {\n\t\t\terror: function() {\n\t\t\t\tif(this.error) {\n\t\t\t\t\tthis.$el.querySelector('#result-error').MaterialSnackbar.showSnackbar({\n\t\t\t\t\t\ttimeout: 3000,\n\t\t\t\t\t\tmessage: this.error\n\t\t\t\t\t});\n\t\t\t\t\tsetTimeout(() => this.error = '', 3000);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tmethods: {\n\t\t\tgettwcs: function(value) {\n\t\t\t\tlet tc,\n\t\t\t\t\tres = {\n\t\t\t\t\t\tbin: invalidValue,\n\t\t\t\t\t\toct: invalidValue,\n\t\t\t\t\t\thex: invalidValue\n\t\t\t\t\t};\n\n\t\t\t\tconst _convertAndFill = (base) => {\n\t\t\t\t\tlet res = convertDecimalToBase(convertBaseToDecimal(tc, 2), base);\n\n\t\t\t\t\t// Fill result with zeros from left to its maximal length according to word length\n\t\t\t\t\twhile(Math.ceil(wordLength / Math.log2(base)) > res.length)\n\t\t\t\t\t\tres = '0' + res;\n\n\t\t\t\t\treturn res;\n\t\t\t\t};\n\n\t\t\t\ttry {\n\t\t\t\t\ttc = twosComplement(value);\n\n\t\t\t\t\tif(checkNumber(value) && tc.length <= wordLength)\n\t\t\t\t\t\tres = {\n\t\t\t\t\t\t\tbin: tc,\n\t\t\t\t\t\t\toct: _convertAndFill(8),\n\t\t\t\t\t\t\thex: _convertAndFill(16)\n\t\t\t\t\t\t};\n\t\t\t\t} catch(e) {\n\t\t\t\t\tif(e instanceof RangeError) {\n\t\t\t\t\t\tres = {\n\t\t\t\t\t\t\tbin: invalidValue,\n\t\t\t\t\t\t\toct: invalidValue,\n\t\t\t\t\t\t\thex: invalidValue\n\t\t\t\t\t\t};\n\t\t\t\t\t\tthis.error = e.message;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn res;\n\t\t\t}\n\t\t}\n\t});\n\n}(window, document, Vue));"],"file":"app.js"}